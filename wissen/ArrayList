 using System;
 using System.Collections;  //namespace cagirmak icin using ifadesi kullanılır..

// //NameSpace
// // dışarıdan indirilen kütüphsneler oldugu gibi, .net'in kendi içerisinde olan kütüphaneler olabilir.
// //namespace aynı isimde olan tipleri birbirinden ayırmak ve içinde tutmak için vardir.. unique olmasını sağlıyor..
// // mesela wissen adlı iki sınıf yazacaksın namespace karışmasın diye grupluyor.namespace ile çağırıyorsun karismasin diye
// // namespace örnekleri: system , collection , system.data.sql


// // stack: LIFO - last in first out çalışan bir koleksiyon.
// // birçok koleksiyon object alır..

// //tır dorsesi yükleme işlemi örneği, son koyulan ilk çikar.

// Stack stack = new Stack();

// stack.Push("yük 1" );
// stack.Push("yük 2" );
// stack.Push("yük 3" );
// stack.Push("yük 4" );
// stack.Push("yük 5" );
// stack.Push("yük 6" );
// stack.Push("yük 7" );
// stack.Push("yük 8" );
// stack.Push("yük 9" );
// stack.Push("yük 10" );
// stack.Push("yük 11" );
// stack.Push("yük 12" );

// // peek metodu silinmek üzere bekleyen item'ı döndürür fakat silmez.
// string silinecek=stack.Peek().ToString();    
// Console.WriteLine(silinecek);  


// int donguDegisken=stack.Count; // stack count sabit bir yerde tutulmalı , yoksa dinamik oldugundan koleksiyon küçülüyor.

// for(int i=0; i<donguDegisken;i++){
//     Console.WriteLine("stack koleksiyonundan eleman cikarmak için enter'a basın");
//     Console.ReadLine();
//     string silinen=stack.Pop().ToString(); 
//     Console.WriteLine("silinen:{0} - Koleksiyon sayısı {1}",silinen,stack.Count);   
// }

//koleksiyonlar eleman girdikçr grnişleyen yapıdadır.

ArrayList arraylist=new ArrayList();  // içerisine object değer alır
   

// arrayliste eleman girdikçe kapasitesini arttırır.

//arrayList içindeki eleman sayısını gormek ıcın
int count=arraylist.Count;

//arrayList'in alabilecegi eleman sayısını belirtir. Capacity siz eleman girdikçe artar.
int capacity=arraylist.Capacity;

// arrayList icinden veri cekmek icin , dizilerdekş gibi.
// string deneme=arraylist[0].ToString();









// ögrenciden 10 not al ve ortalama ve toplamını yazdır.
/*
for(int i=0; i<10; i++){
    System.Console.WriteLine("{0}. notu girin.",i+1);
    arraylist.Add(Console.ReadLine());  

  
}
 int topla=0;
 double ortalama=0;
for(int i=0; i<10; i++){

     topla += (int)(arraylist[i]);
     ortalama=topla/10;
  
  
   } 
   for(int i=0; i<10; i++){

   System.Console.WriteLine("Nor ortalama:{0} toplam:{1}",ortalama,topla); }
   */


// Sayısal loto oyununu arraylist ile yapınız

ArrayList kullanicidanGelen = new ArrayList();
ArrayList random=new ArrayList();

ArrayList bilinenSayilar = new ArrayList();

Random rnd = new Random();

for(int i=0;i<6;i++){

    Console.WriteLine("{0} sayıyı giriniz",i+1);
    kullanicidanGelen.Add(int.Parse(Console.ReadLine()));   
    random.Add(rnd.Next(1,6));
}

Console.WriteLine("Tahminlerin bitti, çekilişi görmek için enter");
Console.ReadLine();

// iki tane koleksiyonu kartezyen biçimde karşılaştıralım
for(int i=0;i<kullanicidanGelen.Count;i++){

    for(int j=0;j<random.Count;j++){
        // burada iki koleksiyonu birbiri ile karşılaştıralım
       if((int)kullanicidanGelen[i]==(int)random[j]){

            // sayı bilinmiş demektir.
            bilinenSayilar.Add(kullanicidanGelen[i]);
                continue;

       }

    }
}
// Bilinen sayıları ekrana yazdıralım
Console.WriteLine("Bilinen Sayılar");
for(int i=0;i<bilinenSayilar.Count;i++){

    Console.Write("{0}-",bilinenSayilar[i]);
}
